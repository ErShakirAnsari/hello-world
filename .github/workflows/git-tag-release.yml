name: Maven Central Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: Tag Version (add prefix v)
        required: true

jobs:
  tag-release:
    name: Git tag & release
    runs-on: ubuntu-latest
    container: ershakiransari/jdk:8-mvn3
    steps:
      - name: Code checkout for ${{ github.event.inputs.version }}
        uses: actions/checkout@v3

      - name: Building artifact for ${{ github.event.inputs.version }}
        run: mvn clean package --no-transfer-progress

      # Creating A Release
      - name: Creating Release ${{ github.event.inputs.version }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Version ${{ github.event.inputs.version }}
          body: |
            - Build Number: ${{ github.run_number }}
            - Released on ${{ env.date_today }}
          draft: false
          prerelease: false

      # Attaching artifact to release
      - name: Attaching artifacts to release ${{ github.event.inputs.version }}
        id: attaching-hello-java
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./hello-java/target/hello-java.jar
          asset_name: hello-java-${{ github.event.inputs.version }}.jar
          asset_content_type: application/java-archive

      # Attaching artifact to release
      - name: Attaching artifacts to release ${{ github.event.inputs.version }}
        id: attaching-hello-maven
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./hello-maven/target/hello-maven.jar
          asset_name: hello-maven-${{ github.event.inputs.version }}.jar
          asset_content_type: application/java-archive

