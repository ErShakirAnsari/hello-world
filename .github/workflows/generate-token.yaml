name: Generate Token

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  generate-token:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate GitHub App JWT
        id: generate-jwt
        run: |
          # Install jq if it's not already installed
          sudo apt-get update
          sudo apt-get install -y jq

          # Define variables
          APP_ID=${{ secrets.GH_APP__HELLO_WORLD_APP_ID }}
          PRIVATE_KEY="${{ secrets.GH_APP__HELLO_WORLD_PRIVATE_KEY }}"
          INSTALLATION_ID=<YOUR_INSTALLATION_ID>

          # Generate JWT using a Node.js script or similar method
          JWT=$(node -e "
            const jwt = require('jsonwebtoken');
            const privateKey = \`${PRIVATE_KEY}\`;
            const payload = {
              iat: Math.floor(Date.now() / 1000) - 60,
              exp: Math.floor(Date.now() / 1000) + (10 * 60),
              iss: '${APP_ID}'
            };
            const token = jwt.sign(payload, privateKey, { algorithm: 'RS256' });
            console.log(token);
          ")

          # Set JWT as an environment variable
          echo "JWT=${JWT}" >> $GITHUB_ENV

      - name: Generate Installation Access Token
        id: generate-token
        run: |
          # Use the JWT to get an access token
          ACCESS_TOKEN=$(curl -X POST \
            -H "Authorization: Bearer ${{ env.JWT }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{}' \
            https://api.github.com/app/installations/${INSTALLATION_ID}/access_tokens \
            | jq -r .token)

          # Set ACCESS_TOKEN as an environment variable
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Use the Token
        run: |
          echo "Using the token..."
          curl -H "Authorization: Bearer ${{ env.ACCESS_TOKEN }}" https://api.github.com/user/repos
